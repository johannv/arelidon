<?phpclass recette {    private $id;    private $metier_id;    private $lvl_req;    private $objet_win;    private $nb_objet_win;    private $ingredient_array;    function recette($id = 1) {        $this->loadRecette($id);    }    function getId() {        return $this->id;    }    function getMetierId() {        return $this->metier_id;    }    function getLvlReq() {        return $this->lvl_req;    }    function getNbObjetWin() {        return $this->nb_objet_win;    }    function getObjetWin() {        return $this->objet_win;    }    function getNumberOfIngredient() {        return count($this->ingredient_array);    }    function getIngredientArray() {        return $this->ingredient_array;    }    function loadRecette($id) {        $sql = "SELECT * FROM metier_recette WHERE id = $id";        $result = loadSqlResultArray($sql);        foreach ($result as $key => $value) {            $this->$key = $value;        }        $sql2 = "SELECT * FROM metier_recette_ingredient WHERE recette_id = $id";        $ingredient_array = loadSqlResultArrayList($sql2);        $this->ingredient_array = $ingredient_array;    }    function canDoRecette($char) {        // V�rification si on a assez de PP	        if ($char->getPP() >= 1) {            $metier = new metier($this->getMetierId());            // V�rification que l'objet de m�tier est �quip�	            if ($this->getToolEquiped($char)) {                // V�rification que le joueur a un niveau assez �lev� dans le m�tier	                if ($metier->getLevelMetierOfChar($char->getId()) >= $this->getLvlReq()) {                    // V�rification qu'il a tous les ingr�dients	                    $valid = true;                    foreach ($this->ingredient_array as $ingredient) {                        if (!item::verificationUserGetItem($ingredient['objet'], $char->getId(), $ingredient['nb_objet'])) {                            $valid = false;                        }                    }                    // si valide on fait la recette	                    if ($valid) {                        // perte des ingr�dients	                        foreach ($this->ingredient_array as $ingredient) {                            $char->dropItem($ingredient['objet'], $ingredient['nb_objet']);                        }                        // gain des objets	                        $objet_win = new item($this->getObjetWin());                        $objet_win->addItemToChar($char->getId(), $this->getNbObjetWin());                        // gain d'exp m�tier	                        $metier->updateExpMetier($char->getId(), $this->getExpForRecette());                        // perte de PP	                        $char->updateMore('pp', -1);                        echo ' Vous avez cr&eacute;&eacute; : ';                        echo $this->getNbObjetWin() . ' <img src="pictures/item/' . $objet_win->getItem() . '.gif" alt="" /> ' . $objet_win->getName();                    } else {                        echo '=> Vous n\'avez pas les ingr&eacute;dients pour r&eacute;aliser cette recette';                    }                } else {                    echo '=> Vous n\'avez pas le niveau pour r&eacute;aliser cette recette';                }            } else {                echo '=> Vous n\'avez pas &eacute;quiper le bon outil pour r&eacute;aliser cette recette';            }        } else {            echo '=> Vous n\'avez pas assez de Point Profession pour r&eacute;aliser cette recette ';        }    }    function getExpForRecette() {        $array_ingre = $this->getObjetsNecessary($this->id);        $nombre_diff = 0;        $nombre = 0;        foreach ($array_ingre as $ingre) {            $nombre_diff++;            $nombre += $ingre['nb_objet'];        }        // 5 d'exp par ingr�dients + 10% par nombre d'ingr�dients diff�rents	        $exp = ($nombre * 5) * (1 + (10 / 100 * $nombre_diff));        $exp = round($exp);        return $exp;    }    function getToolEquiped($char) {        $equipement = item::getEquipement($char->getId(), 'hand');        $metier = new metier($this->getMetierId());        $equipement_need = $metier->getOutilNeed($char);        if ($equipement == $equipement_need)            return true;        else            return false;    }    public function getAllRecettesByMetiers($metier_id = 0) {        $sql = "SELECT * FROM `metier_recette`";        if ($metier_id > 0)            $sql .= " WHERE metier_id = " . $metier_id;        $sql .= " ORDER BY lvl_req DESC";        return loadSqlResultArrayList($sql);    }    public function getObjetsNecessaryPictures($id) {        $arrayofarray = $this->getObjetsNecessary($id);        $echo = '';        foreach ($arrayofarray as $array) {            $echo .= item::showPicture($array['objet']) . ' ' . $array['nb_objet'] . ' ';        }        return $echo;    }    public function getObjetsNecessary($id) {        $sql = "SELECT objet, nb_objet FROM `metier_recette_ingredient` WHERE recette_id=" . $id . ' ;';        $result = loadSqlResultArrayList($sql);        return $result;    }    public function add_recette($metier_id, $lvl_req, $objet_win, $nb_objet_win, $nb_objet_array, $objet_array) {        $sql = "INSERT INTO `metier_recette` (metier_id,lvl_req,objet_win,nb_objet_win) VALUES (" . $metier_id . "," . $lvl_req . "," . item::getIdByName($objet_win) . "," . $nb_objet_win . ");";        loadSqlExecute($sql);        $sql = "SELECT id FROM `metier_recette` WHERE metier_id=" . $metier_id . " AND lvl_req=" . $lvl_req . " AND objet_win=" . item::getIdByName($objet_win) . " AND nb_objet_win=" . $nb_objet_win . " ;";        $recette_id = loadSqlResult($sql);        // Insertion des ingr�dients        foreach ($objet_array as $key => $objet) {            if ($objet != '' && $nb_objet_array[$key] >= 1) {                $sql = "INSERT INTO `metier_recette_ingredient` (recette_id,objet,nb_objet) VALUES (" . $recette_id . "," . item::getIdByName($objet) . "," . $nb_objet_array[$key] . ");";                loadSqlExecute($sql);            }        }    }    public function modif_recette($metier_id, $lvl_req, $objet_win, $nb_objet_win, $nb_objet_array, $objet_array) {        $sql = "UPDATE `metier_recette` SET metier_id=$metier_id ,lvl_req=$lvl_req,objet_win=" . item::getIdByName($objet_win) . ",nb_objet_win=$nb_objet_win WHERE id=" . $this->getId() . ";";        loadSqlExecute($sql);        // Insertion des ingr�dients	        foreach ($objet_array as $key => $objet) {            if ($objet != '' && $nb_objet_array[$key] >= 1) {                $sql = "INSERT INTO `metier_recette_ingredient` (recette_id,objet,nb_objet) VALUES (" . $this->getId() . "," . item::getIdByName($objet) . "," . $nb_objet_array[$key] . ") ON DUPLICATE KEY UPDATE nb_objet=$nb_objet_array[$key];";                loadSqlExecute($sql);            }        }    }    // Fonctions publiques    public static function getAllRecettes($metier_id, $level = 0, $nb_ingredient = 0) {        $sql = "SELECT id FROM metier_recette WHERE metier_id = $metier_id ";        if ($level != 0)            $sql .= "AND lvl_req <= $level";        if ($nb_ingredient != 0)            $sql .= "AND (SELECT COUNT(*) FROM metier_recette_ingredient WHERE recette_id = metier_recette.id) = $nb_ingredient ";        return loadSqlResultArrayList($sql);    }}?>