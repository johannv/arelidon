<?phpclass action {    private $id;    private $level;    private $name;    private $objet_id;    private $metier_id;    private $respawn;    function action($id = 0) {        if ($id != 0)            $this->loadAction($id);    }    function getId() {        return $this->id;    }    function getName() {        return $this->name;    }    function getObjetId() {        return $this->objet_id;    }    function getMetierId() {        return $this->metier_id;    }    function getRespawn() {        return $this->respawn;    }    function loadAction($id) {        $sql = "SELECT * FROM `metier_action` WHERE id = $id";        $result = loadSqlResultArray($sql);        if (count($result) > 0) {            foreach ($result as $key => $value) {                $this->$key = $value;            }        }    }    function add($array) {        $array_row = array();        $array_value = array();        $sql = "INSERT INTO `metier_action` ";        foreach ($array as $row => $value) {            $array_row[] = $row;            switch ($row) {                case 'objet_id':                    $array_value[] = "'" . item::getIdByName($value) . "'";                    break;                case 'name':                    $array_value[] = "'" . htmlentities($value, ENT_QUOTES) . "'";                    break;                default:                    $array_value[] = "'" . $value . "'";                    break;            }        }        $sql .= '(' . implode(',', $array_row) . ') VALUES (' . implode(',', $array_value) . ')';        loadSqlExecute($sql);    }    function addRessource($map, $abs, $ord) {        $time = time();        $sql = "INSERT INTO `metier_ressource` (action_id,map,abs,ord,time) " .                "VALUES (" . $this->getId() . ",$map,$abs,$ord,$time)";        loadSqlExecute($sql);    }    function getToolEquiped($char) {        $equipement = item::getEquipement($char->getId(), 'hand');        $metier = new metier($this->getMetierId());        $equipement_need = $metier->getOutilNeed($char);        if ($equipement == $equipement_need)            return true;        else            return false;    }    function doRecolte($ressource_id, $char) {        $item = new item($this->getObjetId());        $sql = "SELECT level FROM `metier_char` WHERE metier_id=" . $this->getMetierId() . " && char_id=" . $char->getId();        $nombre = loadSqlResult($sql);        $nombre = $nombre * 0.2;        $nombre = ceil($nombre);        $item->addItemToChar($char->getId(), $nombre);        $new_time = time() + $this->getRespawn();        $metier = new metier($this->getMetierId());        $metier->updateExpMetier($char->getId(), $nombre);        $sql = "UPDATE `metier_ressource` SET `time` = $new_time WHERE id = $ressource_id";        loadSqlExecute($sql);    }    public function verifDistance($ressource_id, $char) {        $position = $this->getRessourcePosition($ressource_id);        if ($position['map'] == $char->getMap()) {            if ($this->calculateDistance($char->getAbs(), $char->getOrd(), $position['abs'], $position['ord'])) {                return true;            } else {                return false;            }        } else {            return false;        }    }    public function calculateDistance($abs, $ord, $abs2, $ord2) {        $a = $abs2 - $abs; // �cart horizontale        $b = $ord2 - $ord; // �cart verticale        $absa = abs($a);        $absb = abs($b);        // Valeur absolue du r�sultat        $distance = $absa + $absb;        if ($absa <= 1 and $absb <= 1) {            return true;        } else {            return false;        }    }    public function getRessourcePosition($ressource_id) {        $sql = "SELECT map,abs,ord FROM `metier_ressource` WHERE id=" . $ressource_id;        $position = loadSqlResultArray($sql);        return $position;    }    public static function getAllActions($filter, $min = 0, $max = 45) {        $sql = "SELECT * FROM `metier_action` ";        if ($filter != 0)            $sql .= "WHERE metier_id = " . $filter;        $sql .= " LIMIT $min,$max";        return loadSqlResultArrayList($sql);    }    public static function getAllRessources($filter = 0, $min = 0, $max = 45) {        $sql = "SELECT id,objet_id FROM `metier_action` ";        if ($filter != 0)            $sql .= "WHERE metier_id = " . $filter;        $sql .= " LIMIT $min,$max";        return loadSqlResultArrayList($sql);    }    public static function getRessourceOnCase($idmap, $abs, $ord) {        $sql = "SELECT action_id FROM `metier_ressource` WHERE map = '$idmap' && abs = $abs && ord = $ord LIMIT 1";        return loadSqlResult($sql);    }    static public function deleteRessourceOnMap($abs, $ord, $idmap) {        $sql = "DELETE FROM `metier_ressource` WHERE map = '$idmap' && abs = $abs && ord = $ord";        loadSqlExecute($sql);    }    static public function addAtelierOnMap($metier_id, $map, $abs, $ord) {        $sql = "INSERT INTO `metier_atelier` (metier_id,map, abs, ord) VALUES ('" . $metier_id . "','" . $map . "', '" . $abs . "', '" . $ord . "')";        loadSqlExecute($sql);    }}?>